on: push
jobs:
  # Currently this action doesn't support repositories with multiple Go modules:
  # https://github.com/golangci/golangci-lint-action/issues/544
  # golangci:
  #   name: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.22.x'
  #         cache: false
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v4
  #       with:
  #         # Require: The version of golangci-lint to use.
  #         # When `install-mode` is `binary` (default) the value can be v1.2 or
  #         #  v1.2.3 or `latest` to use the latest version.
  #         # When `install-mode` is `goinstall` the value can be v1.2.3,
  #         #  `latest`, or the hash of a commit.
  #         version: v1.57
  #         args: --out-format=colored-line-number
  tests:
    # Based on
    # https://remarkablemark.org/blog/2021/03/14/setup-postgresql-in-github-actions/
    #
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: golang:1.18.3

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.1
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres
          # required
          POSTGRES_PASSWORD: password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
          cache-dependency-path: go.sum

      - name: Fmt
        id: fmt
        run: |
            go install github.com/segmentio/golines@v0.10.0
            output="$(golines -m 80 --shorten-comments --dry-run .)"
            if [ -n "$output" ]; then
                echo "$output"
                exit 1
            fi

      - name: Vet
        id: vet
        run: |-
          for dir in $(ls ./); do
            if [ ! -d $dir ] || [ ! -f $dir/go.mod ]; then
              break
            fi
            echo ""
            echo "##################"
            echo "# vetting $dir"
            echo "##################"
            (cd $dir && go vet -v ./...)
          done
      - name: Test
        id: test
        run: |-
          for dir in $(ls ./); do
            if [ ! -d $dir ] || [ ! -f $dir/go.mod ]; then
              break
            fi
            echo ""
            echo "##################"
            echo "# testing $dir"
            echo "##################"
            (cd $dir && go test -v ./...)
          done
        env:
          PG_PASS: password
          PG_USER: postgres
          PG_DB_NAME: postgres
          PG_PORT: 5432
          PG_HOST: postgres
      - name: Build
        id: build
        run: |-
          for dir in $(ls ./); do
            if [ ! -d $dir ] || [ ! -f $dir/go.mod ]; then
              break
            fi
            echo ""
            echo "###################"
            echo "# building $dir"
            echo "###################"
            (cd $dir && go build -v ./...)
          done
      - name: Workflows
        id: workflows
        run: |
          (cd actionsgenerator/ && go run ./cmd/actionsgenerator > ../.github/workflows/release.yaml)
          cd .github/workflows
          if [ -n "$(git diff)" ]; then
            echo "change detected in .github/workflows/release.yaml."
            echo "please run `(cd actionsgenerator/ && go run ./cmd/actionsgenerator > ../.github/workflows/release.yaml)`"
            echo ""
            git diff
            exit 1
          fi
