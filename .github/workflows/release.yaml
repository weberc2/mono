name: release
"on":
  push:
    branches:
      - '*'
    tags:
      - '*'
jobs:
  auth:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: TARGET=auth
          context: comments
          file: docker/golang/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ${{ secrets.DOCKER_USERNAME }}/auth:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/auth:latest
  comments:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: TARGET=comments
          context: comments
          file: docker/golang/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ${{ secrets.DOCKER_USERNAME }}/comments:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/comments:latest
  gobuilder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GOBUILDER_AWS_SECRET_ACCESS_KEY }}
          registry: 988080168334.dkr.ecr.us-east-2.amazonaws.com
          username: ${{ secrets.GOBUILDER_AWS_ACCESS_KEY_ID }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: TARGET=gobuilder
          context: gobuilder
          file: docker/gobuilder/Dockerfile
          platforms: linux/amd64
          provenance: false
          push: true
          tags: |-
            988080168334.dkr.ecr.us-east-2.amazonaws.com/gobuilder:${{ github.sha }}
            988080168334.dkr.ecr.us-east-2.amazonaws.com/gobuilder:latest
  linkcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: TARGET=linkcheck
          context: linkcheck
          file: docker/golang/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ${{ secrets.DOCKER_USERNAME }}/linkcheck:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/linkcheck:latest
  pgbackup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: ""
          context: ./docker/pgbackup
          file: ./docker/pgbackup/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ${{ secrets.DOCKER_USERNAME }}/pgbackup:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/pgbackup:latest
  tokens:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: TARGET=tokens
          context: comments
          file: docker/golang/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ${{ secrets.DOCKER_USERNAME }}/tokens:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/tokens:latest
  users:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: TARGET=users
          context: comments
          file: docker/golang/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |-
            ${{ secrets.DOCKER_USERNAME }}/users:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/users:latest
